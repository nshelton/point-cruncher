// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel PointSampler

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture3D<float4> _outputTexture;
RWStructuredBuffer<float3> _inputData;
float4x4 _pointToVolumeTransform;
int _gridSize;

[numthreads(128,1,1)]
void PointSampler (uint3 id : SV_DispatchThreadID)
{
	float4 p = float4(_inputData[id.x], 1.0);
	p = mul(_pointToVolumeTransform, p);

	if (abs(p.x) > 0.5 || abs(p.y) > 0.5 || abs(p.z) > 0.5)
	{
		return;
	}

	p += 0.5;

	uint3 cell = floor(sin(p.xyz) * _gridSize);

	_outputTexture[cell] = (float4)1.0;

}
